openapi: 3.0.0
info:
  description: OpenAPI for Flink Monitoring REST API
  version: 1.0.0
  title: Flink Monitoring REST API
  license:
    name: Apache-2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: monitoring
    description: Flink Monitoring API
servers:
  - url: http://localhost:8081/v1
paths:
  /cluster:
    delete:
      tags:
        - monitoring
      summary: Shuts down the cluster.
      description: ""
      operationId: deleteCluster
      responses:
        "200":
          description: Deleted
  /config:
    get:
      tags:
        - monitoring
      summary: Returns the configuration of the WebUI.
      description: ""
      operationId: getConfig
      responses:
        "200":
          description: DashboardConfiguration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardConfiguration"
  /jars:
    get:
      tags:
        - monitoring
      summary: Returns a list of all jars previously uploaded via '/jars/upload'.
      description: ""
      operationId: getJars
      responses:
        "200":
          description: JarListInfo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JarListInfo"
  /jars/upload:
    post:
      tags:
        - monitoring
      summary: Uploads a jar to the cluster.
      description: ""
      operationId: uploadJar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  description: file to upload
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful upload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /jars/{jarId}:
    delete:
      tags:
        - monitoring
      parameters:
        - name: jarId
          in: path
          required: true
          description: Id of the jar to delete
          schema:
            type: string
      summary: Deletes a jar previously uploaded via '/jars/upload'.
      description: ""
      operationId: deleteJar
      responses:
        "200":
          description: Delete OK
  /jars/{jarId}/run:
    post:
      tags:
        - monitoring
      summary: "Submits a job"
      description: |
        "Submits a job by running a jar previously uploaded via '/jars/upload'.
         Program arguments can be passed both via the JSON request (recommended) or query parameters"
      operationId: runJar
      parameters:
        - name: jarId
          in: path
          required: true
          description: Id of the jar
          schema:
            type: string
      requestBody:
        description: Job parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JarRunRequestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JarRunResponseBody'
  /jobs:
    get:
      tags:
        - monitoring
      summary: Returns an overview over all jobs and their current state.
      description: Returns an overview over all jobs and their current state.
      operationId: getJobs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobIdsWithStatusOverview'
  /jobs/overview:
    get:
      tags:
        - monitoring
      summary: Returns an overview over all jobs.
      description: Returns an overview over all jobs.
      operationId: getJobsOverview
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleJobsDetails'
  /jobs/{jobId}:
    get:
      tags:
        - monitoring
      summary: Returns details of a job.
      description: Returns details of a job.
      operationId: getJob
      parameters:
        - name: jobId
          in: path
          required: true
          description: Id of the job
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailsInfo'
    patch:
      tags:
        - monitoring
      summary: Returns details of a job.
      description: Returns details of a job.
      operationId: terminateJob
      parameters:
        - name: jobId
          in: path
          required: true
          description: Id of the job
          schema:
            type: string
        - name: mode
          in: query
          required: false
          description: String value that specifies the termination mode.
          schema:
            type: string
            enum:
              - cancel
              - stop
      responses:
        "200":
          description: Terminate OK
  /jobs/{jobId}/rescaling:
    patch:
      tags:
        - monitoring
      summary: Triggers the rescaling of a job.
      description: Triggers the rescaling of a job.
      operationId: rescaleJob
      parameters:
        - name: jobId
          in: path
          required: true
          description: Id of the job
          schema:
            type: string
        - name: parallelism
          in: query
          required: true
          description: |
            Positive integer value that specifies the desired parallelism.
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Trigger OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResponse'
  /jobs/{jobId}/rescaling/{triggerId}:
    get:
      tags:
        - monitoring
      summary: Triggers the rescaling of a job.
      description: Triggers the rescaling of a job.
      operationId: getRescaleStatus
      parameters:
        - name: jobId
          in: path
          required: true
          description: |
            32-character hexadecimal string value that identifies a job.
          schema:
            type: string
        - name: triggerId
          in: path
          required: true
          description: |
            32-character hexadecimal string that identifies an asynchronous
            operation trigger ID. The ID was returned then the operation
            was triggered.
          schema:
            type: string
      responses:
        "200":
          description: Trigger status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsynchronousOperationResult'
  /jobs/{jobId}/savepoints:
    post:
      tags:
        - monitoring
      summary: Triggers the rescaling of a job.
      description: Triggers the rescaling of a job.
      operationId: triggerSavepoint
      parameters:
        - name: jobId
          in: path
          required: true
          description: |
            32-character hexadecimal string value that identifies a job.
          schema:
            type: string
      requestBody:
        description: SavepointTriggerRequestBody
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavepointTriggerRequestBody'
      responses:
        "202":
          description: Trigger OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResponse'
  /jobs/{jobId}/savepoints/{triggerId}:
    get:
      tags:
        - monitoring
      summary: Triggers the rescaling of a job.
      description: Triggers the rescaling of a job.
      operationId: getSavepointStatus
      parameters:
        - name: jobId
          in: path
          required: true
          description: |
            32-character hexadecimal string value that identifies a job.
          schema:
            type: string
        - name: triggerId
          in: path
          required: true
          description: |
            32-character hexadecimal string that identifies an asynchronous
            operation trigger ID. The ID was returned then the operation
            was triggered.
          schema:
            type: string
      responses:
        "200":
          description: Trigger status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsynchronousOperationResult'
components:
  schemas:
    JarListInfo:
      title: JarListInfo
      type: object
      properties:
        address:
          type: string
        files:
          type: array
          items:
            $ref: "#/components/schemas/JarFileInfo"
      required: [address, files]

    JarFileInfo:
      title: JarFileInfo
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        uploaded:
          type: integer
        entry:
          type: array
          items:
            $ref: "#/components/schemas/JarEntryInfo"
      required: [id, name, uploaded, entry]

    JarEntryInfo:
      title: JarEntryInfo
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required: [name]

    DashboardConfiguration:
      type: object
      properties:
        refresh-interval:
          type: integer
        timezone-name:
          type: string
        timezone-offset:
          type: integer
        flink-version:
          type: string
        flink-revision:
          type: string
      required: [refresh-interval, timezone-offset, flink-version, flink-revision]

    ApiResponse:
      title: An uploaded response
      description: Describes the result of uploading an image resource
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

    JarRunRequestBody:
      type: object
      properties:
        entryClass:
          type: string
        programArgs:
          type: string
        programArgsList:
          type: array
          items:
            type: string
        parallelism:
          type: integer
        jobId:
          type: string
        allowNonRestoredState:
          type: boolean
        savepointPath:
          type: string

    JarRunResponseBody:
      type: object
      properties:
        jobid:
          type: string
          format: string
      required: [jobid]

    JobIdsWithStatusOverview:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/JobIdWithStatus"
      required: [jobs]

    JobIdWithStatus:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - RUNNING
            - FAILING
            - FAILED
            - CANCELLING
            - CANCELED
            - FINISHED
            - RESTARTING
            - SUSPENDING
            - SUSPENDED
            - RECONCILING
      required: [id, status]

    MultipleJobsDetails:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobSummary'
      required: [jobs]

    JobSummary:
      type: object
      properties:
        jid:
          type: string
        name:
          type: string
        state:
          type: string
          enum:
            - CREATED
            - RUNNING
            - FAILING
            - FAILED
            - CANCELLING
            - CANCELED
            - FINISHED
            - RESTARTING
            - SUSPENDING
            - SUSPENDED
            - RECONCILING
        start-time:
          type: integer
        end-time:
          type: integer
        duration:
          type: integer
        last-modification:
          type: integer
        tasks:
          $ref: '#/components/schemas/TaskCounts'
      required: [jid, name, state, start-time, end-time, duration,
                 last-modification, tasks]

    TaskCounts:
      type: object
      properties:
        total:
          type: integer
        created:
          type: integer
        scheduled:
          type: integer
        deploying:
          type: integer
        running:
          type: integer
        finished:
          type: integer
        canceling:
          type: integer
        canceled:
          type: integer
        failed:
          type: integer
        reconciling:
          type: integer
      required: [total, created, scheduled, deploying, running, finished,
                 canceling, canceled, failed, reconciling]

    JobDetailsInfo:
      type: object
      properties:
        jid:
          type: string
        name:
          type: string
        isStoppable:
          type: boolean
        state:
          type: string
          enum:
            - CREATED
            - RUNNING
            - FAILING
            - FAILED
            - CANCELLING
            - CANCELED
            - FINISHED
            - RESTARTING
            - SUSPENDING
            - SUSPENDED
            - RECONCILING
        start-time:
          type: integer
        end-time:
          type: integer
        duration:
          type: integer
        now:
          type: integer
        timestamps:
          $ref:  '#/components/schemas/StateTimes'
        vertices:
          type: array
          items:
            $ref: '#/components/schemas/JobVertexDetailsInfo'
        status-counts:
          type: object
          additionalProperties:
            type: integer
        plan:
          type: string
      required: [jid, name, isStoppable, state, start-time, end-time, duration,
                 now, timestamps, vertices, status-counts, plan]

    JobPlan:
      type: object
      properties:
        jid:
          type: string
        name:
          type: string
        nodes:
          $ref: '#/components/schemas/JobPlanNode'
      required: [jid, name, nodes]

    JobPlanNode:
      type: object
      properties:
        id:
          type: string
        parallelism:
          type: integer
        operator:
          type: string
        operator_strategy:
          type: string
        description:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/NodeInput'
        optimizer_properties:
          $ref: '#/components/schemas/OptimizerProperties'
      required: [id, parallelism, operator, operator_strategy, description, optimizer_properties]

    NodeInput:
      type: object
      properties:
        num:
          type: integer
        id:
          type: string
        ship_strategy:
          type: string
        local_strategy:
          type: string
        caching:
          type: string
        exchange:
          type: string
      required: [num, id, exchange]

    OptimizerProperties:
      type: object
      properties:
        global_properties:
          type: object
          additionalProperties:
            type: string
        local_properties:
          type: object
          additionalProperties:
            type: string
        estimates:
          type: object
          additionalProperties:
            type: string
        costs:
          type: object
          additionalProperties:
            type: string
        compiler_hints:
          type: object
          additionalProperties:
            type: string

    StateTimes:
      type: object
      properties:
        CREATED:
          type: integer
        RUNNING:
          type: integer
        FAILING:
          type: integer
        FAILED:
          type: integer
        CANCELLING:
          type: integer
        CANCELED:
          type: integer
        FINISHED:
          type: integer
        RESTARTING:
          type: integer
        SUSPENDED:
          type: integer
        RECONCILING:
          type: integer

    JobVertexDetailsInfo:
      properties:
        id:
          type: string
        name:
          type: string
        parallelism:
          type: integer
        status:
          type: string
          enum:
            - CREATED
            - SCHEDULED
            - DEPLOYING
            - RUNNING
            - FINISHED
            - CANCELING
            - CANCELED
            - FAILED
            - RECONCILING
        start-time:
          type: integer
        end-time:
          type: integer
        duration:
          type: integer
        tasks:
          type: object
          additionalProperties:
            type: integer
        metrics:
          $ref: '#/components/schemas/IOMetricsInfo'
      required: [id, name, parallelism, status, tasks, metrics]

    IOMetricsInfo:
      type: object
      properties:
        read-bytes:
          type: integer
        read-bytes-complete:
          type: boolean
        write-bytes:
          type: integer
        write-bytes-complete:
          type: boolean
        read-records:
          type: integer
        read-records-complete:
          type: boolean
        write-records:
          type: integer
        write-records-complete:
          type: boolean

    TriggerResponse:
      type: object
      properties:
        request-id:
          type: string
      required: [request-id]

    AsynchronousOperationResult:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/QueueStatus'
        operation:
          type: string
      required: [status]

    QueueStatus:
      type: object
      properties:
        id:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
      required:
        - id

    SavepointTriggerRequestBody:
      type: object
      properties:
        target-directory:
          type: string
        cancel-job:
          type: boolean
      required: [cancel-job]

    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
      required: [errors]